import json
import xmltodict
import requests
from bs4 import BeautifulSoup
from threading import Thread
import threading
import time
import math
import sys
import itertools
import random

class Analyzer:
	def __init__(self, ** kwargs):
		self.FileName = kwargs.get('name')
		self.ANIME_TO_GENRES = {}
		self.RETRIES = kwargs.get('retries', 10)
		self.CUTOFF_PERCENT = kwargs.get("cutoff", 0.08)
		self.TYPES = [x.upper() for x in kwargs.get('types', ["TV", "Movie", "Ova", "Special", "ONA"])]
		self.STATUS =  [x.upper() for x in kwargs.get('status', ['DROPPED', 'COMPLETED', 'PLAN TO WATCH', 'WATCHING', 'ON-HOLD'])]
		self.GenresByRating = {}
		self.COUNT = 0
		self.RATINGSLIST = []

		with open("AnimeXMLFiles/{}.xml".format(self.FileName), 'rb') as f:
			parsed = xmltodict.parse(f)
			JSON = json.loads(json.dumps(parsed))['myanimelist']

		with open("Genres.json", 'r') as f:
			self.ID_TO_GENRES = json.load(f)

		self.ANIMES = JSON['anime']
		self.INFO = JSON['myinfo']

	def getGenres(self, anime):
		if anime['my_status'].upper() not in self.STATUS or anime['series_type'].upper() not in self.TYPES:
			return self
		if int(anime['my_score']) == 0:
			return self

		self.RATINGSLIST.append(int(anime['my_score']))

		# If we have discovered this anime before
		if anime['series_animedb_id'] in self.ID_TO_GENRES.keys():
			self.ANIME_TO_GENRES[json.dumps(anime)] = self.ID_TO_GENRES[anime['series_animedb_id']]['Genres']
			self.ID_TO_GENRES[anime['series_animedb_id']]['Ratings'][self.INFO['user_id']] = int(anime['my_score'])
			self.COUNT += 1
			return self

		# Try to get Site information
		site = requests.get("https://myanimelist.net/anime/"+ anime['series_animedb_id'])
		retries = 0
		while site.status_code != 200 and retries <= self.RETRIES:
			time.sleep(5)
			site = requests.get("https://myanimelist.net/anime/"+ anime['series_animedb_id'])
			retries += 1

		# If we retried too much
		if retries == self.RETRIES + 1:
			return self

		# Us Beautiful Soup to pull the Genres from the page
		soup = BeautifulSoup(site.text, "html.parser")
		rawGenres = soup.find('span', text='Genres:')
		Genres = [x.text for x in rawGenres.parent.find_all(href = True)]

		rawScore = soup.find('span', text='Score:')
		Score = rawScore.parent.find(itemprop = 'ratingValue').text

		rawAired = soup.find('span', text='Aired:')
		Aired = rawAired.parent.text

		self.ANIME_TO_GENRES[json.dumps(anime)] = Genres
		self.ID_TO_GENRES[anime['series_animedb_id']] = {
		'Genres' : Genres,
		'Ratings' : {self.INFO['user_id'] : int(anime['my_score']), 0 : int(float(Score))},
		'Title' : anime['series_title'],
		'Type' : anime['series_type'] ,
		'Aired' : Aired
		}
		self.COUNT += 1
		print("Found a new Anime! ({})".format(anime['series_title']))
		return self

	def runThreads(self):
		queue = []
		for anime in self.ANIMES:
			thr = Thread(target = self.getGenres, args = [anime])
			queue.append(thr)
		while len(queue) > 0:
			while threading.activeCount() <= 10 and len(queue) > 0:
				queue.pop().start()

		while(threading.activeCount() > 1):
			print("Waiting for finish... ({} remaining)".format(threading.activeCount() - 1))
			time.sleep(3)
		return self

	def aggregate(self):
		self.LOWESTRATING = sorted(self.RATINGSLIST)[int(len(self.RATINGSLIST)*.05)]
		self.HIGHESTRATING = sorted(self.RATINGSLIST, reverse=True)[int(len(self.RATINGSLIST)*.05)]

		for anime, genres in self.ANIME_TO_GENRES.items():
			anime = json.loads(anime)
			for genre in genres:
				if genre in self.GenresByRating.keys():
					self.GenresByRating[genre].append(int(anime['my_score']))
				else:
					self.GenresByRating[genre] = [int(anime['my_score'])]

			pairs = [combo for L in range(0, len(genres)+1) for combo in itertools.combinations(genres, L)][1:]
			for pair in pairs:
				pair = sorted(pair)
				Combo = "/".join(pair)
				if Combo in self.GenresByRating.keys():
					self.GenresByRating[Combo].append(int(anime['my_score']))
				else:
					self.GenresByRating[Combo] = [int(anime['my_score'])]


		items = self.GenresByRating.items()
		for genre, ratings in items:
			self.GenresByRating[genre] = {
			'average' : round(sum(ratings) / len(ratings), 2),
			'ratings' : ratings,
			'score' : round((sum(ratings) / len(ratings) - self.LOWESTRATING) / (self.HIGHESTRATING - self.LOWESTRATING) * 100, 2) if round((sum(ratings) / len(ratings) - self.LOWESTRATING) / (self.HIGHESTRATING - self.LOWESTRATING) * 100, 2) > 0 else 0,
			'single' : "/" not in genre,
			'display' : len(ratings) > self.COUNT * self.CUTOFF_PERCENT
			}

		self.TOP5 = sorted(self.GenresByRating.items(), key = lambda x: x[1]['score'] if x[1]['single'] and x[1]['display'] else 0, reverse = True)[:5]
		return self

	def writeAnalysisToFile(self):
		sorted_genres = sorted(self.GenresByRating.items(), key=lambda t: t[1]['score'], reverse = True)
		output = "Username: {}\nID: {}\nAnimes Analyzed: {}\nCut-off: {}%\nTypes: {}\nStatus: {}\n\n".format(self.INFO['user_name'], self.INFO['user_id'], self.COUNT, round(self.CUTOFF_PERCENT * 100, 1), ", ".join(self.TYPES), ", ".join(self.STATUS))
		for single in sorted_genres:
			d = single[1]
			if d['display'] and d['single']:
				output += "{:16s}Score: {:5s} Average: {:5s} Num Watched: {:5s}\n".format(single[0], str(d['score']), str(d['average']), str(len(d['ratings'])))
				First = True 
				Split = False
				for subGenre in sorted_genres:
					if single[0] in subGenre[0] and not subGenre[1]['single'] and subGenre[1]['display']:
						if subGenre[1]['score'] < single[1]['score'] and not First and not Split:
							Split = True
							output += "-"*80 + "\n"
						catagory = subGenre[0].split("/")
						try:
							catagory.remove(single[0])
						except:
							pass
						Symbol = "+" if not Split else "-"
						output += "{} {:35s}Score: {:5s} Average: {:5s} Num Watched: {:5s}\n".format(Symbol, "/".join(catagory), str(subGenre[1]['score']), str(subGenre[1]['average']), str(len(subGenre[1]['ratings'])))
					First = False
				output += "\n"

		with open("Output\{}.txt".format(self.FileName), 'w') as f:
			f.write(output)
		return self

	def updateDatabase(self):
		with open("Genres.json", 'w') as f:
			json.dump(self.ID_TO_GENRES, f, indent = 4)
		return self

def CreateFile(name, ** kwargs):
	kwargs['name'] = name
	A = Analyzer(** kwargs)
	A.runThreads().aggregate().writeAnalysisToFile().updateDatabase()
	print("Output file named: '{}.txt'".format(kwargs.get('name')))
	return A

def WillILike(name, genres, **kwargs):
	A = kwargs.get("A", None)
	if A == None:
		print("New Analyzer")
		A = Analyzer(name = name).runThreads().aggregate().updateDatabase()
	pairs = [combo for L in range(0, min(len(genres)+1, 4)) for combo in itertools.combinations(genres, L)][1:]
	Scores = []
	Quiet = kwargs.get('quiet', False)
	for pair in pairs:
		pair = sorted(pair)
		if "/".join(pair) in A.GenresByRating.keys():
			info = A.GenresByRating["/".join(pair)]
			for x in range(int(math.pow(2, len(pair)+1))):
				Scores.append(info['score'])
			if not Quiet:
				print("{} - {}".format("/".join(pair), info['score']))
		else:
			if not Quiet:
				print("Not found combo of {}".format("/".join(pair)))

	if not Quiet:
		print("Your top Animes with this pairing")
		GoodAnimes = []
		for anime, animegenres in A.ANIME_TO_GENRES.items():
			anime = json.loads(anime)
			ContainsAll = len([True for genre in genres if genre in animegenres]) == len(genres)
			if ContainsAll:
				GoodAnimes.append((anime['series_title'], int(anime['my_score'])))

		top5 = ["{} - {}".format(anime[0], anime[1]) for anime in sorted(GoodAnimes, key = lambda x: x[1], reverse = True)[:5]]
		print("\n".join(top5))

	if kwargs.get('text_output', False):
		return "There is a {}% chance you will like this genre group.".format(round(sum(Scores)/len(Scores), 2))
	else:
		return round(sum(Scores)/len(Scores), 4)

def recommendGenreGroups(name, num = 10, **kwargs):
	A = kwargs.get("A", None)
	if A == None:
		print("New Analyzer")
		A = Analyzer(name = name).runThreads().aggregate().updateDatabase()
	single_genres = [genre[0] for genre in A.GenresByRating.items() if genre[1]['single'] and genre[1]['display']]
	groupings = [combo for x in range(kwargs.get("smallest_group_size", 2), kwargs.get("largest_group_size", 4)+1) for combo in itertools.combinations(single_genres, x)]
	Entries = {}
	for genres in groupings:
		if "/".join(genres) in A.GenresByRating.keys() and kwargs.get('new_groups', False):
			continue
		if "/".join(genres) not in A.GenresByRating.keys() and kwargs.get('current_groups', False):
			continue
		pairs = [combo for L in range(0, min(len(genres)+1, kwargs.get("largest_group_size", 4)+1)) for combo in itertools.combinations(genres, L)][1:]
		Scores = []
		for pair in pairs:
			pair = sorted(pair)
			try:
				info = A.GenresByRating["/".join(pair)]
				if info['score'] == 0:
					continue
				for x in range(len(pair)+1):
					Scores.append(info['score'])
			except:
				pass

		Entries["/".join(pair)] = round(sum(Scores)/len(Scores), 3) if len(Scores) > 0 else 0
	if num == "ALL":
		num = len(Entries)
	return sorted(Entries.items(), key = lambda x: x[1], reverse = True)[:num]
	#group_to_rating = [(group, WillILike("Nikolai", group, quiet = True)) for group in groupings]

def recommendAnimes(name, num=10, **kwargs):
	A = kwargs.get("A", None)
	if A == None:
		print("New Analyzer")
		A = Analyzer(name = name).runThreads().aggregate().updateDatabase()
	FoundGenreGroups = recommendGenreGroups(name, kwargs.get("sample_pool", "ALL"), **kwargs)
	retList = []
	ALLOWEDTYPES = [x.upper() for x in kwargs.get('recommend_types', ["TV", "Movie", "Ova", "Special", "ONA"])] 

	for genreGroup in FoundGenreGroups:

		# Look through our database for animes
		FoundAnimes = FindInDataBase(genreGroup[0].split('/'), ID_TO_GENRES = ID_TO_GENRES)

		# for every anime that we find
		for anime in FoundAnimes:
			# If contains a genre from the Excluded list
			if len(set(anime[1]['Genres']) & set(kwargs.get("exclude_genres", []))) != 0:
				continue

			# If contains all the animes from included list
			if set(anime[1]['Genres']) & set(kwargs.get("include_genres", [])) != set(kwargs.get("include_genres", [])):
				continue

			# If not in the Allowed Types
			if anime[1]['Type'].upper() not in ALLOWEDTYPES:
				continue

			# If we have already added this to our list
			if anime[1]['Title'] in [x[0] for x in retList]:
				continue
			
			# If you have already watched this anime
			if A.INFO['user_id'] in anime[1]['Ratings'].keys():
				continue

			Likeness = WillILike(name, anime[1]['Genres'], quiet = True, A = A, **kwargs)
			Rating_Multiplier = (sum(anime[1]['Ratings'].values()) / len(anime[1]['Ratings']) + 2) / 10
			Score = round(Likeness * Rating_Multiplier, 5)
			retList.append((anime[1]['Title'], Score))

		if len(retList) > 100 * num:
			break

	sortedList = sorted(retList, key = lambda x: x[1], reverse = True)
	if kwargs.get('nice_print', False):
		return "\n".join(["{} - {}%".format(x[0], x[1]) for x in sortedList[:num]])
	else:
		return sortedList[:num]

with open("Genres.json", 'r') as f:
	ID_TO_GENRES = json.load(f)

GENRES_TO_ID = {}
for entry in ID_TO_GENRES.items():
	for genre in entry[1]['Genres']:
		if genre in GENRES_TO_ID.keys():
			GENRES_TO_ID[genre].append(entry[0])
		else:
			GENRES_TO_ID[genre] = [entry[0]]


def FindInDataBase(genreGroup, **kwargs):
	ID_TO_GENRES = kwargs.get("ID_TO_GENRES", None)
	if ID_TO_GENRES == None:
		with open("Genres.json", 'r') as f:
			ID_TO_GENRES = json.load(f)
	toRet = []
	currentIDs = []
	for genre in genreGroup:
		if len(currentIDs) == 0:
			currentIDs = GENRES_TO_ID[genre]
		else:
			currentIDs = set(currentIDs) & set(GENRES_TO_ID[genre])
	for ID in currentIDs:
		toRet.append((ID, ID_TO_GENRES[ID]))
	return toRet

def AnimesLikeThis(genreGroup, num = 10):
	combos = [combo for x in range(max(int(len(genreGroup)/2), 1), len(genreGroup)+1, 1) for combo in itertools.combinations(genreGroup, x)]
	animes = [FindInDataBase(combo) for combo in combos]
	NameToScore = set( [(anime2[1]['Title'], round(sum([x for x in anime2[1]['Ratings'].values()]) / len([x for x in anime2[1]['Ratings'].values()]) * min(len(anime2[1]['Genres'])/len(genreGroup), 1, len(genreGroup)/len(anime2[1]['Genres'])), 3) ) for anime1 in animes for anime2 in anime1])
	sortedToScore = sorted(NameToScore, key = lambda x: x[1], reverse = True)
	return sortedToScore[:num]

def AddMeLotsOfAnime(threads = 5, iterations = 10, **kwargs):
	for x in range(threads):
		Thread(target = PopulateList, args = [iterations], kwargs = kwargs).start()

def PopulateList(numAnimes = 1,  **kwargs):
	with open("Genres.json", 'r') as f:
		ID_TO_GENRES = json.load(f)

	queue = []
	results = []
	for x in range(numAnimes):
		results.append(getSomeRandomAnime(ID_TO_GENRES))	

	print(results)
	with open("Genres.json", 'r') as f:
		ID_TO_GENRES = json.load(f)
	for result in results:
		if result == None:
			continue
		ID, Dict = result
		if ID in ID_TO_GENRES.keys():
			ID_TO_GENRES[ID]['Aired'] = Dict['Aired']
		else:
			ID_TO_GENRES[ID] = Dict

	with open("Genres.json", 'w') as f:
			json.dump(ID_TO_GENRES, f, indent = 4)

BadIDs = ['27290', '25829', '21314', '14858', '9475', '1877', '26745', '14860', '6871', '21818', '8916', '24974', '34671', '13036', '18879', '18487', '15962', '33020', '11425', '4829', '21942', '28576', '19958', '7123', '25258', '16539', '32315', '11116', '19031', '31627', '20266', '26652', '21278', '23246', '4321', '7733', '24164', '6134', '19646', '19410', '31477', '14786', '12186', '5329', '31171', '21894', '8698', '22618', '29086', '29009', '32531', '32184', '26092', '27710', '8813', '26582', '13049', '12230', '17305', '6699', '24958', '14445', '17885', '16246', '25842', '13330', '2940', '12676', '9209', '31443', '31123', '27113', '34578', '3310', '29024', '8612', '22026', '27234', '11683', '5847', '7325', '26787', '15853', '23455', '31208', '11832', '21406', '1569', '15363', '7747', '23988', '22046', '30324', '32986', '17702', '32114', '12825', '24640', '26941', '18362', '16618', '21321', '12590', '12443', '16262', '19846', '19956', '10556', '13058', '15499', '14580', '30319', '34848', '15450', '23190', '21384', '10097', '15859', '29129', '15171', '16272', '28709', '19765', '28632', '31957', '25034', '16212', '11898', '5076', '8639', '4445', '7035', '4315', '20015', '7074', '25448', '27660', '14560', '10942', '29020', '23166', '26288', '23298', '22355', '8847', '2763', '21259', '23038', '32263', '23310', '12633', '13578', '33251', '17558', '28376', '29147', '9927', '33955', '11108', '13075', '27797', '31192', '27123', '24324', '8472', '8445', '20704', '5188', '31327', '17412', '24150', '23215', '28985', '23368', '15802', '23616', '34181', '8348', '13889', '33252', '17083', '16550', '23573', '27910', '26093', '12712', '5831', '23016', '33110', '24287', '15151', '26938', '19296', '34509', '28525', '27012', '12544', '17200', '4313', '16420', '33992', '31852', '26193', '11051', '21283', '5769', '7991', '24476', '10158', '6470', '32497', '28224', '22516', '12782', '29286', '34242', '28012', '30560', '18144', '33212', '10617', '8428', '17566', '16651', '14330', '15662', '939', '32427', '31550', '20515', '29470', '19218', '25076', '32556', '29525', '18016', '12837', '9432', '15231', '28795', '29189', '23294', '6388', '25964', '25361', '3580', '30406', '23026', '18050', '28705', '24129', '31334', '30247', '26148', '11265', '19386', '28923', '27328', '30620', '11746', '10557', '8135', '26838', '15903', '25756', '4135', '5123', '25815', '25709', '22287', '9068', '13980', '29206', '12770', '6455', '18867', '11782', '6598', '9684', '22667', '28409', '4079', '31787', '1715', '19355', '12269', '4861', '7326', '9102', '15531', '23060', '14214', '7282', '13168', '27264', '7670', '27585', '20064', '26426', '21389', '27014', '19475', '18942', '6765', '24288', '10785', '18407', '32048', '9925', '12047', '8242', '22142', '17057', '8654', '14029', '25019', '1321', '24754', '23883', '24542', '22294', '25020', '22660', '7166', '26776', '7764', '21906', '14613', '8053', '6559', '9228', '25212', '23196', '10831', '4258', '22394', '4040', '14874', '33471', '17407', '18624', '24900', '19246', '18594', '15124', '8534', '20670', '12692', '30170', '20058', '16033', '33901', '33812', '3084', '14646', '23818', '5015', '8775', '12524', '18758', '9291', '20370', '17618', '14356', '26993', '7927', '20322', '5480', '25056', '11351', '10382', '23689', '4755', '32280', '18458', '33294', '23571', '28773', '25350', '13594', '26488', '14528', '33202', '8942', '19028', '18428', '21834', '17416', '16615', '16090', '34323', '28393', '23654', '31546', '17848', '11085', '31945', '14151', '16350', '9076', '17852', '31489', '22971', '12167', '29039', '10660', '28745', '30653', '29729', '19530', '3170', '34885', '10939', '21918', '9111', '5370', '31536', '28061', '37', '33466', '11892', '11506', '19039', '15602', '34778', '29877', '20098', '32545', '30710', '30546', '3122', '12138', '22450', '7281', '15228', '29042', '16435', '19858', '24757', '27190', '34619', '8779', '12013', '7660', '33269', '18406', '28658', '955', '17101', '12040', '19625', '5853', '16019', '18230', '14172', '21669', '21609', '7644', '14205', '29604', '9543', '26911', '6854', '21240', '13866', '29132', '24394', '2342', '29428', '11450', '23890', '25808', '29664', '20215', '672', '5465', '11374', '13654', '26005', '19766', '15493', '25917', '13062', '29064', '29442', '23370', '4670', '4296', '33799', '22702', '22068', '20694', '28836', '6121', '29899', '3779', '21028', '21245', '17582', '19274', '4408', '20714', '6387', '11282', '11014', '14048', '18208', '6370', '20024', '31186', '24221', '30990', '10047', '5366', '18785', '32072', '22875', '25952', '5280', '23484', '24918', '28605', '27622', '25371', '15310', '16407', '8979', '20950', '20609', '13327', '25326', '10783', '7327', '26442', '27704', '7457', '28056', '32952', '27208', '24975', '29040', '22162', '22965', '14348', '24748', '25772', '17056', '29213', '33374', '24684', '16050', '29492', '32569', '31215', '25908', '26961', '19284', '20846', '12241', '8321', '9843', '20863', '6565', '25026', '17915', '23203', '27496', '4830', '2296', '15278', '30791', '9960', '12925', '17740', '21757', '31596', '7874', '14736', '14922', '17408', '11183', '13042', '9747', '11768', '10988', '22133', '32640', '4971', '19004', '24982', '33510', '24301', '32406', '26837', '7470', '17264', '15526', '4', '6084', '8468', '7586', '21060', '26715', '5912', '20570', '17668', '26810', '32266', '9615', '9705', '20107', '14473', '20711', '27035', '6898', '15413', '26601', '19739', '24082', '11078', '12766', '17478', '951', '24151', '22688', '21577', '18509', '24088', '32040', '9677', '27992', '22878', '19016', '22542', '17810', '2458', '21116', '13964', '26914', '28200', '27515', '19716', '29066', '22975', '14899', '28318', '9315', '34713', '17124', '12022', '12730', '24144', '3524', '22089', '15166', '6298', '26533', '24514', '33885', '19298', '25270', '21173', '19025', '15174', '15752', '20466', '18386', '4784', '27476', '23226', '7362', '12536', '18292', '21619', '4142', '33076', '11726', '888', '28676', '23100', '26691', '11784', '27604', '28214', '7977', '32120', '21760', '31502', '16926', '34415', '24581', '32110', '25763', '10339', '15075', '17406', '27983', '34829', '8263', '23757', '5513', '13339', '11142', '491', '27883', '23422', '11189', '23228', '10655', '17894', '25141', '12702', '20927', '15919', '24561', '12265', '9720', '12456', '26875', '12760', '3693', '33220', '34664', '14688', '6523', '29783', '13905', '15321', '32078', '6672', '19231', '16402', '12114', '18700', '27097', '2903', '13196', '4371', '5109', '3374', '12294', '16398', '15626', '29244', '18892', '34517', '10095', '30208', '9099', '34751', '16203', '16764', '4994', '31184', '15800', '34720', '32113', '15440', '9360', '24598', '4641', '31213', '6798', '16260', '29468', '28338', '3795', '10434', '17799', '26580', '25626', '4835', '21070', '7042', '697', '29598', '10164', '10832', '29487', '27355', '7331', '19172', '13404', '31619', '11554', '29161', '20465', '17840', '5509', '11407', '23180', '17274', '11337', '10498', '5796', '25180', '23046', '7833', '4728', '27367', '17063', '17594', '7677', '22092', '10404', '21510', '11540', '2158', '31709', '11716', '29278', '9010', '3312', '3544', '18768', '16062', '13557', '9721', '27069', '25657', '24298', '3042', '6805', '12962', '23670', '14788', '17974', '16563', '29001', '33228', '32596', '22028', '34258', '34056', '20219', '33650', '26807', '27595', '6680', '23312', '16571', '32666', '20412', '29043', '14336', '12737', '20364', '18363', '16315', '30624', '30636', '15885', '7657', '11592', '11117', '7687', '12947', '5783', '7809', '17378', '1304', '25414', '13310', '3413', '11198', '11557', '13038', '6928', '21355', '27908', '30718', '23165', '8380', '17550', '20092', '20492', '19723', '25764', '1117', '33621', '20988', '24936', '21589', '14208', '10169', '25628', '24353', '325', '9015', '9128', '15163', '20303', '7714', '5017', '13363', '11885', '32582', '24506', '25509', '34114', '29603', '13070', '17826', '8515', '21851', '19782', '27591', '9676', '27869', '22282', '30816', '6570', '34216', '24554', '26393', '14737', '25018', '17060', '28152', '17243', '15078', '5179', '15297', '7197', '22430', '17363', '27485', '17011', '34641', '25189', '4169', '32081', '4778', '19222', '19269', '31399', '33167', '30558', '8746', '23968', '26429', '5354', '22503', '34074', '12862', '19840', '22146', '1004', '25850', '13906', '20597', '25585', '18140', '16569', '4815', '27683', '9059', '4754', '12918', '14206', '17046', '16471', '26912', '20596', '32694', '11588', '22393', '2297', '20030', '15462', '1229', '16760', '34211', '19209', '27916', '30675', '922', '18445', '4543', '25368', '13516', '20216', '16584', '19632', '12726', '29969', '27642', '34095', '34214', '17845', '31127', '34843', '24980', '28478', '25121', '17398', '33646', '14637', '28522', '20454', '26476', '27357', '8077', '14837', '11570', '16010', '6418', '20090', '15183', '22844', '24747', '8822', '14961', '7030', '8846', '24081', '24829', '18508', '410', '10381', '14233', '18492', '19498', '10221', '33921', '31236', '20006', '26038', '17382', '22027', '26597', '15496', '5243', '10093', '21636', '27078', '8119', '16860', '28844', '34436', '14607', '26709', '13398', '7674', '21456', '32710', '25906', '28271', '15764', '7034', '26644', '12772', '4678', '33613', '24329', '28920', '28072', '9613', '15160', '28505', '29241', '28395', '21416', '28965', '27578', '28544', '18204', '10619', '12222', '14996', '15692', '17903', '15810', '24043', '3373', '17354', '10002', '16116', '21739', '25147', '18598', '19389', '5808', '21602', '24720', '31793', '4319', '30645', '10402', '34754', '33422', '94', '20162', '33595', '22463', '7535', '7402', '25795', '5994', '17343', '6876', '26899', '21940', '34059', '3241', '4662', '31805', '27151', '30596', '8128', '19837', '18484', '26692', '13428', '17631', '22344', '17760', '22441', '27478', '26881', '24425', '31727', '16773', '583', '6060', '11870', '27721', '6910', '32099', '18092', '20211', '29949', '12622', '13778', '21216', '12304', '31325', '12054', '8836', '20615', '31418', '6635', '29939', '29948', '19921', '19844', '28611', '22395', '28207', '27945', '15467', '13136', '8334', '29913', '3133', '27870', '25887', '28743', '17108', '28147', '25040', '24755', '11200', '6722', '9428', '28043', '17262', '3289', '18211', '26274', '8623', '9891', '28572', '28198', '7727', '31934', '14361', '27762', '10807', '27978', '32002', '29741', '25513', '20004', '6777', '30024', '17377', '24122', '6545', '1318', '21352', '14318', '33250', '25468', '26489', '32492', '12970', '6155', '19422', '5047', '13350', '17946', '11517', '18648', '30035', '34775', '25395', '6486', '29962', '33688', '3387', '12285', '27217', '14350', '3440', '27472', '32277', '25315', '13', '9771', '19819', '24481', '22214', '5413', '22594', '29380', '17369', '22462', '13063', '13566', '3293', '10985', '29026', '4708', '12306', '17578', '13972', '12412', '24648', '16509', '17723', '12118', '8283', '24986', '20708', '9738', '32163', '3494', '17000', '24666', '7346', '11627', '32398', '10198', '14041', '23511', '16083', '7272', '25191', '32982', '22540', '26896', '1997', '7758', '17786', '16975', '26409', '30328', '25307', '29143', '11573', '24505', '15001', '7951', '28455', '7092', '11426', '32719', '25000', '17329', '20471', '22780', '4642', '698', '265', '14654', '12976', '22522', '11345', '16231', '25107', '23151', '21426', '10489', '33005', '34899', '26972', '31765', '17443', '16061', '33968', '19643', '34465', '6905', '29187', '29309', '24183', '26045', '7795', '6632', '27923', '31803', '2323', '32700', '27855', '25565', '24000', '18060', '30232', '12573', '30971', '22223', '21691', '27053', '10480', '32629', '17304', '24239', '15147', '27027', '26836', '17522', '7957', '13018', '23997', '9189', '34617', '20193', '12233', '33609', '1150', '13913', '26809', '26424', '29384', '20814', '5134', '28134', '22327', '4111', '26202', '21798', '28694', '6526', '12507', '16797', '26936', '16733', '25748', '10911', '23508', '9255', '885', '4323', '26117', '14269', '27761', '17197', '32423', '9923', '19623', '15461', '26561', '9954', '4234', '12256', '1523', '22487', '21408', '34660', '3476', '17450', '10890', '23625', '33941', '32635', '28266', '10623', '12354', '29500', '13910', '7263', '3733', '10358', '26676', '2116', '10510', '32824', '29103', '30628', '11106', '25627', '32971', '30154', '426', '13460', '5297', '25880', '5210', '6113', '5022', '1188', '1802', '16018', '27191', '17518', '28962', '16955', '11311', '26774', '26749', '18438', '10624', '6292', '20868', '32203', '22960', '8535', '25548', '11978', '23970', '34272', '5180', '15680', '1870', '14176', '14960', '5514', '25358', '14101', '13035', '24501', '28274', '29295', '13320', '6010', '16200', '11772', '19918', '23159', '21880', '18134', '25283', '33928', '4706', '8891', '5617', '32200', '26662', '23807', '31248', '17344', '5367', '4776', '24696', '19994', '28943', '14870', '12453', '7040', '16491', '13248', '30374', '15506', '28037', '14882', '34260', '27884', '28498', '24340', '7318', '5127', '18148', '25252', '27235', '14044', '18756', '12192', '7703', '14809', '12796', '26991', '16973', '34053', '15554', '8020', '26681', '15056', '20275', '7841', '32539', '25276', '5187', '30593', '19286', '20593', '25086', '29564', '19014', '13621', '14590', '11496', '19350', '27384', '13340', '21525', '14260', '13701', '26939', '23974', '28228', '6255', '18028', '22464', '3041', '28446', '34478', '13149', '4588', '3068', '15855', '9866', '11310', '10874', '26203', '22842', '26834', '25140', '12146', '4244', '10494', '24452', '33037', '12292', '17364', '16100', '34293', '11107', '2972', '17568', '12917', '80', '32325', '6406', '14478', '15221', '33657', '25412', '25807', '24372', '9292', '17989', '34158', '21132', '19406', '26252', '25481', '5456', '29646', '13065', '16029', '31162', '32546', '18493', '27070', '17348', '9653', '14094', '19617', '19178', '7682', '7754', '21351', '25078', '7442', '9692', '2426', '20268', '26337', '27368', '22631', '11015', '5459', '9016', '29648', '21971', '23860', '6345', '3986', '5700', '32963', '22743', '15009', '2202', '12813', '14118', '4392', '20700', '4465', '3057', '4880', '14695', '2942', '11218', '24794', '17900', '22521', '23008', '18854', '26609', '27221', '17234', '34090', '18254', '33917', '31613', '30737', '11526', '29678', '22762', '13392', '26365', '8298', '17266', '23398', '28654', '15339', '14532', '18185', '13012', '20691', '11605', '17003', '21475', '27898', '31281', '4428', '6983', '19091', '30631', '16191', '4702', '16542', '4345', '28196', '26521', '25330', '14844', '21866', '30762', '27074', '1305', '8051', '4317', '12798', '805', '8059', '7372', '6688', '2340', '27893', '29436', '5939', '8117', '27666', '22386', '14202', '15863', '25255', '25290', '17195', '11903', '2043', '21748', '20522', '26892', '26752', '18470', '21719', '20426', '27261', '11603', '14157', '18991', '13901', '31347', '8895', '26455', '21306', '21626', '28946', '14794', '14555', '6009', '20018', '26025', '21934', '8502', '29454', '24827', '20698', '14497', '17968', '6784', '16995', '12933', '16623', '22318', '20862', '29632', '14128', '25115', '23241', '26104', '22236', '8568', '20762', '19352', '10836', '12127', '31681', '20624', '16278', '7802', '13523', '13909', '10063', '10861', '12160', '31273', '21093', '23230', '28566', '30231', '27769', '25600', '26049', '23532', '27409', '3319', '1131', '33977', '9534', '27706', '15007', '9579', '15667', '20793', '14547', '31284', '29420', '20617', '20859', '15676', '24166', '32602', '31946', '7011', '11312', '23518', '2865', '27210', '17042', '6716', '34063', '8048', '8821', '34854', '23541', '26129', '29167', '3666', '11350', '12902', '1906', '30704', '11408', '5409', '12705', '31816', '21394', '11461', '29360', '23794', '3758', '3386', '27414', '31601', '5122', '30650', '26348', '15433', '21583', '30966', '14280', '10495', '15358', '23806', '15924', '21795', '22364', '19948', '21361', '11052', '34507', '18424', '14611', '22413', '22895', '17208', '26640', '13643', '33579', '8371', '28778', '20181', '31860', '13837', '17598', '18034', '18217', '28194', '20887', '16996', '27372', '26143', '8656', '27859', '6168', '3311', '18545', '18430', '18930', '12688', '24404', '17640', '8602', '27574', '34333', '27144', '15428', '25538', '17010', '30887', '26771', '18024', '24599', '9158', '5264', '14850', '21223', '14443', '18738', '4243', '9527', '5342', '16504', '13268', '29502', '26650', '7231', '17118', '19253', '22412', '26762', '21459', '29400', '21555', '11400', '10055', '11086', '27302', '23488', '30229', '5428', '817', '14440', '17542', '23143', '1795', '10747', '19711', '25025', '5527', '31358', '34002', '33682', '12334', '29951', '21137', '7565', '30713', '13794', '14035', '7036', '7068', '22969', '17802', '27431', '3647', '3932', '19204', '4673', '3752', '19532', '10962', '26009', '8344', '30962', '13985', '575', '13447', '5882', '33570', '18433', '5532', '26866', '1354', '21526', '31937', '20953', '5380', '11576', '2911', '19612', '22121', '9578', '18068', '31585', '31342', '739', '8253', '16311', '17332', '14666', '1717', '24480', '3780', '9129', '10541', '6485', '30147', '28168', '14303', '26877', '19790', '14408', '32507', '26588', '16848', '13502', '17278', '29784', '34457', '32399', '14366', '3212', '4376', '30669', '24661', '28509', '16342', '23774', '26152', '18940', '7947', '9279', '34762', '16298', '27116', '33227', '30488', '15812', '25793', '7314', '31473', '10982', '32923', '25154', '3333', '21376', '16939', '22944', '20540', '20089', '14758', '5026', '30836', '34331', '20642', '22349', '17661', '19158', '24690', '16681', '15481', '29838', '31656', '3278', '11812', '31104', '18670', '29348', '9912', '33243', '8828', '4874', '23002', '10415', '19226', '11114', '26534', '24487', '19967', '22502', '7349', '34549', '17838', '25332', '20925', '8466', '18302', '25160', '4735', '25524', '28461', '3957', '29193', '701', '7912', '22716', '10032', '17503', '10111', '23649', '26546', '16088', '20116', '18067', '16176', '24940', '9161', '6313', '13332', '22446', '18293', '34894', '26201', '14795', '22682', '4568', '10371', '16737', '25580', '29049', '19180', '13586', '14158', '32860', '16205', '17446', '20384', '13485', '10331', '26360', '15761', '22066', '9050', '22692', '13864', '12360', '5728', '27306', '20685', '29071', '16289', '13306', '22397', '13474', '24192', '25120', '3770', '16204', '29872', '16221', '5487', '9530', '14080', '10085', '10154', '26765', '25613', '19973', '20245', '16024', '28204', '1653', '12178', '22836', '21590', '32435', '22546', '23521', '16284', '18135', '13636', '24050', '26075', '31063', '32540', '33748', '28808', '1739', '4970', '32713', '4707', '919', '22633', '18980', '20993', '20806', '13266', '2958', '22275', '25616', '27650', '20989', '19836', '2580', '933', '8091', '17182', '7039', '9378', '23896', '4926', '34256', '13385', '20934', '23940', '16412', '22515', '27688', '27644', '8183', '2877', '33501', '23146', '21290', '12973', '22116', '9206', '30973', '1447', '1695', '32908', '14947', '26556', '18285', '23245', '29242', '4458', '16856', '26178', '8105', '20543', '31256', '21817', '31973', '11406', '24119', '31212', '13037', '13720', '13661', '21648', '8222', '30562', '15702', '19581', '31528', '7128', '30697', '29767', '19522', '14754', '17071', '16721', '27434', '10131', '8288', '22831', '7788', '26318', '12572', '22060', '26937', '24258', '7093', '14391', '22023', '16447', '32841', '2623', '8160', '24163', '15320', '22858', '3148', '24453', '8982', '21907', '29761', '33569', '29112', '13450', '33937', '19380', '18476', '987', '5119', '4138', '26388', '3593', '27155', '12344', '16897', '4241', '14495', '18318', '11470', '31857', '3156', '13558', '14597', '14828', '23998', '32392', '18872', '18777', '18562', '8818', '21003', '29653', '21983', '10700', '26162', '4739', '33090', '19300', '7853', '25676', '31514', '32651', '33504', '27984', '34435', '11182', '14277', '20920', '10989', '3492', '13481', '16134', '16949', '31704', '12071', '14486', '9519', '16220', '16791', '32389', '13943', '15027', '24090', '25824', '27273', '11024', '32264', '17433', '18103', '23502', '5731', '30314', '20171', '27805', '27239', '10125', '13374', '23608', '12650', '15281', '12213', '28594', '28230', '6578', '16863', '27981', '9369', '19134', '21238', '31330', '13001', '16365', '30006', '7173', '29991', '31748', '24173', '30780', '21722', '33517', '3528', '27676', '21212', '6238', '13326', '32604', '5793', '17980', '3699', '22725', '23176', '23198', '11950', '33107', '13838', '32647', '16862', '11297', '5677', '34544', '28372', '16531', '24316', '23326', '17284', '10222', '26827', '23664', '16020', '6358', '11629', '23238', '17463', '30541', '8411', '22721', '16596', '16587', '8209', '16218', '33785', '30749', '13087', '19210', '10496', '8318', '23111', '15090', '3975', '23976', '923', '20804', '5175', '26973', '29339', '11289', '156', '34221', '24509', '13518', '20878', '29079', '27034', '4046', '5385', '24589', '20675', '3103', '14604', '32553', '16873', '14396', '12368', '26849', '16372', '15927', '27541', '24110', '11329', '12727', '31889', '11084', '5552', '30462', '15048', '14950', '26444', '21297', '14717', '32753', '10971', '30933', '34605', '9531', '20409', '4686', '17942', '30852', '3726', '4746', '17562', '1248', '33961', '21621', '40', '26603', '17444', '26874', '29162', '20962', '23088', '4109', '27906', '16108', '34372', '16828', '29019', '21138', '34050', '25370', '14411', '18613', '5472', '25725', '32874', '13252', '34538', '21147', '18614', '28106', '15218', '7869', '29704', '13898', '16671', '26754', '22267', '24307', '28068', '18733', '11031', '26018', '8967', '31877', '32127', '4028', '16768', '24674', '4149', '19072', '15429', '29424', '13360', '17033', '24762', '12314', '8062', '21088', '24618', '12171', '15079', '23902', '21931', '19337', '24162', '25852', '13832', '22863', '9408', '28142', '14316', '17411', '32183', '25163', '3404', '10769', '21310', '20143', '13662', '13750', '29840', '9294', '22555', '11700', '10580', '16593', '9753', '11346', '29849', '13068', '7650', '26305', '542', '30525', '5685', '10237', '32683', '19655', '23784', '19020', '25925', '29519', '7253', '27348', '9235', '21768', '8161', '7849', '5903', '4573', '17493', '15655', '31927', '10472', '30238', '21736', '31723', '10647', '30828', '25425', '12522', '18962', '27086', '21091', '21343', '12696', '7348', '26342', '29113', '3216', '33277', '6214', '31423', '32181', '26399', '33067', '20493', '4611', '15026', '11559', '34797', '16885', '6338', '26746', '1690', '6596', '4007', '13573', '9193', '6640', '16192', '12150', '25813', '32463', '32436', '7929', '9835', '24702', '18287', '26995', '24235', '27956', '21558', '12276', '6933', '10026', '11452', '15405', '23789', '13224', '19986', '17898', '25207', '16439', '15844', '11519', '12072', '4267', '30632', '23596', '8106', '7379', '8744', '14160', '20763', '22322', '24652', '12430', '24294', '30087', '10754', '21732', '12911', '5379', '15469', '30476', '6442', '15384', '21694', '10658', '22077', '24054', '17526', '10023', '13291', '16716', '15848', '19805', '7010', '11132', '8219', '4525', '4649', '8159', '28521', '10512', '27048', '29118', '6807', '7826', '3199', '20936', '33640', '15262', '11223', '27084', '34128', '25446', '29253', '15536', '14453', '23929', '699', '7298', '16839', '17449', '31316', '9663', '3925', '21986', '6416', '14169', '13312', '23799', '10852', '29622', '18243', '18008', '7689', '4152', '13233', '7821', '30273', '9397', '30598', '23206', '24799', '28394', '28414', '21102', '2789', '25292', '4601', '34381', '14275', '26358', '33417', '21326', '10569', '27244', '14228', '15304', '13216', '21344', '28606', '33361', '27162', '25679', '18279', '32731', '24908', '28023', '28850', '14664', '9965', '26413', '5142', '13890', '8104', '4691', '15305', '32090', '8485', '18462', '13694', '14721', '13176', '17762', '27596', '15164', '20722', '7127', '29185', '10779', '18170', '10574', '27948', '25297', '18788', '27802', '30472', '6732', '25630', '14732', '20338', '24033', '26555', '5798', '8096', '26613', '31835', '22701', '18607', '20750', '20436', '28900', '18580', '24009', '29618', '30714', '21912', '24168', '20038', '12958', '18364', '25802', '24582', '32990', '3991', '9372', '13170', '15192', '11838', '7636', '3395', '17480', '30165', '14194', '17528', '17646', '28448', '7784', '12721', '24148', '24927', '9638', '13386', '27570', '29011', '34742', '13436', '15876', '11128', '20564', '15923', '7827', '27475', '14894', '15283', '19802', '22691', '28945', '30775', '28199', '15438', '18160', '13095', '19310', '12644', '29690', '27768', '4976', '22767', '14897', '27236', '23793', '30708', '8030', '20154', '21228', '3978', '10376', '18773', '26149', '27177', '28512', '30382', '7277', '6223', '15290', '25775', '25797', '34788', '29674', '25175', '9434', '32586', '16855', '22909', '16739', '26080', '9695', '29090', '9171', '30545', '1939', '12227', '13154', '24836', '31560', '8688', '33140', '4747', '6743', '26999', '10327', '32302', '31915', '15683', '15627', '4978', '24349', '16889', '31935', '28659', '17155', '21141', '12747', '21949', '14072', '28966', '19903', '9459', '24420', '12609', '22032', '7050', '12527', '25427', '23255', '16545', '17931', '13705', '11402', '10952', '7963', '20460', '18862', '16316', '11098', '22707', '29672', '32131', '21244', '20352', '18269', '19593', '29243', '34594', '15515', '14302', '13689', '18935', '13546', '25562', '15066', '12846', '15446', '14728', '34266', '11912', '11003', '19122', '19050', '6638', '24620', '20105', '34175', '26596', '21322', '24513', '11330', '16343', '3003', '34835', '26668', '26010', '15391', '2554', '27556', '9659', '4523', '16294', '30264', '20881', '19860', '25011', '31290', '15645', '22258', '33359', '10274', '28341', '28930', '22400', '16170', '10328', '25706', '7828', '18526', '7246', '7317', '18336', '12966', '26672', '310', '18908', '16837', '15773', '2381', '19019', '1824', '30890', '11041', '7275', '18163', '27339', '23018', '18995', '34173', '17540', '32517', '16691', '25508', '33315', '33512', '29610', '30511', '31152', '17692', '20237', '19598', '14740', '33224', '26170', '19698', '6483', '30719', '32819', '27865', '17552', '24112', '8812', '11831', '14681', '6754', '27276', '25339', '33133', '20088', '14087', '26003', '3172', '32970', '33604', '14652', '4473', '27875', '8287', '29558', '15790', '29812', '3623', '18308', '9940', '20079', '19476', '26459', '23175', '5740', '27061', '29788', '12008', '29723', '31042', '14137', '19806', '22459', '22548', '6990', '25865', '7055', '15309', '32312', '8905', '8056', '13986', '4576', '4556', '19911', '6715', '14656', '6026', '22560', '31763', '20808', '27459', '2220', '29077', '23497', '18210', '8788', '28015', '13554', '16641', '31920', '19190', '29553', '17982', '7452', '19490', '15232', '29630', '3191', '15822', '4143', '32768', '3851', '20872', '8403', '954', '29364', '9186', '16842', '9610', '28140', '27638', '16725', '19702', '20697', '19181', '25514', '32559', '24402', '20480', '17018', '21249', '27894', '21318', '15794', '26630', '4145', '33449', '9830', '29582', '20591', '15928', '33284', '12051', '28616', '29496', '6037', '7673', '6180', '25595', '21095', '29882', '22704', '29377', '21910', '4128', '13975', '7168', '20823', '21392', '726', '6138', '6144', '21040', '20610', '17162', '7235', '8691', '32579', '25227', '18013', '5585', '23024', '14168', '24291', '34789', '26720', '30858', '14442', '17316', '28259', '23127', '5024', '12828', '32121', '28560', '24831', '15092', '7136', '4787', '17504', '7885', '5604', '28630', '6221', '15827', '16321', '7328', '7923', '11092', '9427', '15023', '14990', '11095', '3390', '23821', '3632', '15484', '27719', '17603', '34025', '7202', '12534', '6334', '9596', '6100', '15138', '27801', '1047', '27684', '19276', '7840', '4841', '33980', '31590', '3504', '25196', '28752', '14222', '25974', '13097', '22650', '14320', '21901', '29229', '21960', '8390', '34201', '11915', '23145', '21814', '6014', '21944', '25863', '31475', '12400', '12875', '20157', '12854', '18280', '6713', '3634', '28240', '15194', '30436', '13989', '13250', '23474', '21682', '20396', '29684', '25300', '34142', '27141', '11160', '15354', '25126', '16243', '10922', '16535', '12394', '29538', '24421', '25988', '26845', '2997', '28472', '3850', '19520', '3739', '11302', '24843', '4455', '17191', '34139', '22504', '5676', '32661', '15718', '28914', '18917', '15840', '1267', '28986', '10650', '13981', '27779', '15224', '15568', '13962', '10186', '14452', '15209', '29448', '16629', '29068', '24878', '13111', '12462', '12830', '7487', '5185', '25398', '30102', '20678', '12625', '14712', '21026', '25485', '13591', '14121', '16431', '27427', '29514', '34065', '26950', '28507', '27201', '25348', '16736', '14056', '25504', '11292', '34884', '9246', '15546', '14584', '32479', '9104', '17899', '31940', '25279', '7111', '23632', '12739', '23840', '12983', '31375', '27829', '31897', '22024', '18370', '33257', '10699', '19118', '27366', '14493', '26903', '13096', '9094', '20819', '13739', '16516', '21248', '7351', '26519', '26844', '21979', '9450', '34397', '19263', '28952', '34505', '6529', '24947', '28410', '19002', '23041', '20964', '9480', '24870', '8488', '16390', '25995', '30894', '11137', '14492', '25828', '8498', '28181', '15832', '7895', '19792', '11032', '13688', '17911', '3555', '26036', '22808', '6785', '23371', '20184', '23126', '27792', '13950', '4255', '17064', '12246', '28456', '23554', '8695', '16139', '4309', '5737', '10264', '16333', '26525', '33495', '22363', '17971', '2914', '13323', '32702', '25194', '11388', '11876', '30183', '13846', '5368', '7574', '11191', '33518', '22718', '23103', '21860', '19577', '12107', '32486', '21858', '11334', '23264', '19371', '24292', '28358', '6913', '4636', '14679', '11298', '10544', '24722', '21390', '29885', '24149', '21665', '12510', '16947', '12418', '16549', '29336', '25475', '10959', '17347', '17851', '29608', '18131', '23600', '15284', '16781', '29218', '27062', '15248', '25232', '2888', '3189', '28790', '24750', '12812', '29376', '13174', '17122', '24894', '8305', '7410', '26971', '31504', '14139', '13929', '14672', '27928', '8627', '7880', '20390', '20514', '28964', '23284', '18547', '4185', '4988', '17515', '26543', '27178', '13858', '11249']

def getSomeRandomAnime(data, ** kwargs):
	AnimeID = int(random.random() * 34948)
	while str(AnimeID) in data.keys() and data[str(AnimeID)].get("Aired", "") == "" or str(AnimeID) in BadIDs:
		AnimeID = int(random.random() * 34948)
	site = requests.get("https://myanimelist.net/anime/"+ str(AnimeID))
	retries = 0
	while site.status_code != 200 and retries < kwargs.get('retries', 20):
		while str(AnimeID) in data.keys() and data[str(AnimeID)].get("Aired", "") == "" or str(AnimeID) in BadIDs:
			AnimeID = int(random.random() * 34948)
		site = requests.get("https://myanimelist.net/anime/"+ str(AnimeID))
		retries += 1
		if site.status_code == 429:
			time.sleep(5)
		if site.status_code == 404:
			BadIDs.append(str(AnimeID))
	if retries == kwargs.get('retries', 20):
		print("too many retries")
		return
	try:
		soup = BeautifulSoup(site.text, "html.parser")
		rawGenres = soup.find('span', text='Genres:')
		Genres = [x.text for x in rawGenres.parent.find_all(href = True)]

		rawScore = soup.find('span', text='Score:')
		Score = rawScore.parent.find(itemprop = 'ratingValue').text

		Title = soup.find(itemprop = 'name').text

		rawType = soup.find('span', text='Type:')
		Type = rawType.parent.find('a').text

		rawAired = soup.find('span', text='Aired:')
		Aired = rawAired.parent.text

		print("Adding {}".format(Title))

		return ( AnimeID, {
			'Genres' : Genres,
			'Ratings' : {0 : int(float(Score))},
			'Title' : Title,
			'Type' : Type,
			'Aired' : Aired
			}
		)
	except Exception as e:
		getSomeRandomAnime(data, **kwargs)

def TopX(name, num, **kwargs):
	A = kwargs.get("A", Analyzer(name = name).runThreads().aggregate())
	return sorted(A.GenresByRating.items(), key = lambda x: x[1]['score'] if x[1]['single'] and x[1]['display'] else 0, reverse = True)[:num]

def AnimeCompare(name1, name2, ** kwargs):
	kwargs['name'] = name1
	FirstA = Analyzer(** kwargs).runThreads().aggregate()
	kwargs['name'] = name2
	SecondA = Analyzer(** kwargs).runThreads().aggregate()
	toPrint = ""
	sorted1 = sorted(FirstA.GenresByRating.items(), key=lambda t: t[1]['score'], reverse = True)
	sorted2 = sorted(SecondA.GenresByRating.items(), key=lambda t: t[1]['score'], reverse = True)
	OneLikesTwoLikes = {}

	for Person1Data in sorted1:
		if Person1Data[1]['display'] and Person1Data[1]['single'] and Person1Data[0] in [x[0] for x in sorted2]:
			FirstScoreSingle = str(FirstA.GenresByRating[Person1Data[0]]['score'])
			SecondScoreSingle = SecondA.GenresByRating[Person1Data[0]]['score']

			toPrint += "{:27s} {}'s Score: {:5s} {}'s Score: {}\n".format(Person1Data[0], name1, FirstScoreSingle, name2, SecondScoreSingle)
			toPrint += "-"*70+"\n"

			for LookForGroup in sorted1:
				if Person1Data[0] in LookForGroup[0].split("/") and not LookForGroup[1]['single'] and LookForGroup[1]['display'] and LookForGroup[0] in [x[0] for x in sorted2]:
					catagory = LookForGroup[0].split("/")
					try:
						catagory.remove(Person1Data[0])
					except:
						pass

					FirstScoreDouble = str(FirstA.GenresByRating[LookForGroup[0]]['score'])
					SecondScoreDouble = SecondA.GenresByRating[LookForGroup[0]]['score']
					toPrint += "- {:25s} {}'s Score: {:5s} {}'s Score: {}\n".format("/".join(catagory), name1, FirstScoreDouble, name2, SecondScoreDouble)
			toPrint += "\n"
	print("File Output at '{}&{}.txt'".format(name1, name2))
	with open("Output\{}&{}.txt".format(name1, name2), 'w') as f:
		f.write(toPrint)
	return FirstA, SecondA
